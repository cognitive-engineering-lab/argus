// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { ClausePriority } from '../../../types';
import { ConsideredClause } from '../../../types';
import { DomainGoal } from '../../../types';
import { InEnvironment } from '../../../types';
import { NoSolution } from '../../../types';
import { Solution } from '../../../types';
import { TreeDescription } from '../../../types';
import { UCanonical } from '../../../types';

export interface SolveFromClauses { outcome: Solution | NoSolution | null, did_flounder: boolean, goal: UCanonical<InEnvironment<DomainGoal>>, clauses: Array<ConsideredClause>, iteration_order: Array<[number, [Solution, ClausePriority] | null]>, subnodes: Record<number, TreeDescription>, }