// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { Binders } from '../../../types';
import { DomainGoal } from '../../../types';
import { EqGoal } from '../../../types';
import { Goal } from '../../../types';
import { Goals } from '../../../types';
import { ProgramClauses } from '../../../types';
import { QuantifierKind } from '../../../types';
import { SubtypeGoal } from '../../../types';

export type GoalData = { Quantified: [QuantifierKind, Binders<Goal>] } | { Implies: [ProgramClauses, Goal] } | { All: Goals } | { Not: Goal } | { EqGoal: EqGoal } | { SubtypeGoal: SubtypeGoal } | { DomainGoal: DomainGoal } | "CannotProve";