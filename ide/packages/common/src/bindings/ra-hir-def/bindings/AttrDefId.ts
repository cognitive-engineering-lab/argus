// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { ConcreteAdtId } from '../../../types';
import { ConcreteImplId } from '../../../types';
import { ConcreteTraitId } from '../../../types';
import { ConstId } from '../../../types';
import { EnumVariantId } from '../../../types';
import { ExternBlockId } from '../../../types';
import { ExternCrateId } from '../../../types';
import { FieldId } from '../../../types';
import { FunctionId } from '../../../types';
import { GenericParamId } from '../../../types';
import { MacroId } from '../../../types';
import { ModuleId } from '../../../types';
import { StaticId } from '../../../types';
import { TraitAliasId } from '../../../types';
import { TypeAliasId } from '../../../types';
import { UseId } from '../../../types';

export type AttrDefId = { ModuleId: ModuleId } | { FieldId: FieldId } | { AdtId: ConcreteAdtId } | { FunctionId: FunctionId } | { EnumVariantId: EnumVariantId } | { StaticId: StaticId } | { ConstId: ConstId } | { TraitId: ConcreteTraitId } | { TraitAliasId: TraitAliasId } | { TypeAliasId: TypeAliasId } | { MacroId: MacroId } | { ImplId: ConcreteImplId } | { GenericParamId: GenericParamId } | { ExternBlockId: ExternBlockId } | { ExternCrateId: ExternCrateId } | { UseId: UseId };